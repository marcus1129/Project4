
Project4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800200  000003f8  0000046c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003f8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000047a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004ac  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  000004ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001023  00000000  00000000  00000554  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000d04  00000000  00000000  00001577  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000042f  00000000  00000000  0000227b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000d0  00000000  00000000  000026ac  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005c7  00000000  00000000  0000277c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000299  00000000  00000000  00002d43  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00002fdc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	86 c0       	rjmp	.+268    	; 0x112 <__bad_interrupt>
   6:	00 00       	nop
   8:	84 c0       	rjmp	.+264    	; 0x112 <__bad_interrupt>
   a:	00 00       	nop
   c:	82 c0       	rjmp	.+260    	; 0x112 <__bad_interrupt>
   e:	00 00       	nop
  10:	80 c0       	rjmp	.+256    	; 0x112 <__bad_interrupt>
  12:	00 00       	nop
  14:	7e c0       	rjmp	.+252    	; 0x112 <__bad_interrupt>
  16:	00 00       	nop
  18:	7c c0       	rjmp	.+248    	; 0x112 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	7a c0       	rjmp	.+244    	; 0x112 <__bad_interrupt>
  1e:	00 00       	nop
  20:	78 c0       	rjmp	.+240    	; 0x112 <__bad_interrupt>
  22:	00 00       	nop
  24:	76 c0       	rjmp	.+236    	; 0x112 <__bad_interrupt>
  26:	00 00       	nop
  28:	74 c0       	rjmp	.+232    	; 0x112 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	72 c0       	rjmp	.+228    	; 0x112 <__bad_interrupt>
  2e:	00 00       	nop
  30:	70 c0       	rjmp	.+224    	; 0x112 <__bad_interrupt>
  32:	00 00       	nop
  34:	6e c0       	rjmp	.+220    	; 0x112 <__bad_interrupt>
  36:	00 00       	nop
  38:	6c c0       	rjmp	.+216    	; 0x112 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	6a c0       	rjmp	.+212    	; 0x112 <__bad_interrupt>
  3e:	00 00       	nop
  40:	68 c0       	rjmp	.+208    	; 0x112 <__bad_interrupt>
  42:	00 00       	nop
  44:	66 c0       	rjmp	.+204    	; 0x112 <__bad_interrupt>
  46:	00 00       	nop
  48:	64 c0       	rjmp	.+200    	; 0x112 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	62 c0       	rjmp	.+196    	; 0x112 <__bad_interrupt>
  4e:	00 00       	nop
  50:	60 c0       	rjmp	.+192    	; 0x112 <__bad_interrupt>
  52:	00 00       	nop
  54:	5e c0       	rjmp	.+188    	; 0x112 <__bad_interrupt>
  56:	00 00       	nop
  58:	5c c0       	rjmp	.+184    	; 0x112 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	5a c0       	rjmp	.+180    	; 0x112 <__bad_interrupt>
  5e:	00 00       	nop
  60:	58 c0       	rjmp	.+176    	; 0x112 <__bad_interrupt>
  62:	00 00       	nop
  64:	56 c0       	rjmp	.+172    	; 0x112 <__bad_interrupt>
  66:	00 00       	nop
  68:	54 c0       	rjmp	.+168    	; 0x112 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	52 c0       	rjmp	.+164    	; 0x112 <__bad_interrupt>
  6e:	00 00       	nop
  70:	50 c0       	rjmp	.+160    	; 0x112 <__bad_interrupt>
  72:	00 00       	nop
  74:	4e c0       	rjmp	.+156    	; 0x112 <__bad_interrupt>
  76:	00 00       	nop
  78:	4c c0       	rjmp	.+152    	; 0x112 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	4a c0       	rjmp	.+148    	; 0x112 <__bad_interrupt>
  7e:	00 00       	nop
  80:	48 c0       	rjmp	.+144    	; 0x112 <__bad_interrupt>
  82:	00 00       	nop
  84:	46 c0       	rjmp	.+140    	; 0x112 <__bad_interrupt>
  86:	00 00       	nop
  88:	44 c0       	rjmp	.+136    	; 0x112 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	42 c0       	rjmp	.+132    	; 0x112 <__bad_interrupt>
  8e:	00 00       	nop
  90:	40 c0       	rjmp	.+128    	; 0x112 <__bad_interrupt>
  92:	00 00       	nop
  94:	3e c0       	rjmp	.+124    	; 0x112 <__bad_interrupt>
  96:	00 00       	nop
  98:	3c c0       	rjmp	.+120    	; 0x112 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	3a c0       	rjmp	.+116    	; 0x112 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	38 c0       	rjmp	.+112    	; 0x112 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	36 c0       	rjmp	.+108    	; 0x112 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	34 c0       	rjmp	.+104    	; 0x112 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	32 c0       	rjmp	.+100    	; 0x112 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	30 c0       	rjmp	.+96     	; 0x112 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	2e c0       	rjmp	.+92     	; 0x112 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	2c c0       	rjmp	.+88     	; 0x112 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	2a c0       	rjmp	.+84     	; 0x112 <__bad_interrupt>
  be:	00 00       	nop
  c0:	28 c0       	rjmp	.+80     	; 0x112 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	26 c0       	rjmp	.+76     	; 0x112 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	24 c0       	rjmp	.+72     	; 0x112 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	22 c0       	rjmp	.+68     	; 0x112 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	20 c0       	rjmp	.+64     	; 0x112 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	1e c0       	rjmp	.+60     	; 0x112 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	1c c0       	rjmp	.+56     	; 0x112 <__bad_interrupt>
  da:	00 00       	nop
  dc:	1a c0       	rjmp	.+52     	; 0x112 <__bad_interrupt>
  de:	00 00       	nop
  e0:	18 c0       	rjmp	.+48     	; 0x112 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e8 ef       	ldi	r30, 0xF8	; 248
  fc:	f3 e0       	ldi	r31, 0x03	; 3
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	ae 30       	cpi	r26, 0x0E	; 14
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>
 10e:	02 d0       	rcall	.+4      	; 0x114 <main>
 110:	71 c1       	rjmp	.+738    	; 0x3f4 <_exit>

00000112 <__bad_interrupt>:
 112:	76 cf       	rjmp	.-276    	; 0x0 <__vectors>

00000114 <main>:
#include "UARTLib.h"


int main(void)
{
	UART.init(ASYNC, 19200, 0);
 114:	e0 91 02 02 	lds	r30, 0x0202	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
 118:	f0 91 03 02 	lds	r31, 0x0203	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
 11c:	40 e0       	ldi	r20, 0x00	; 0
 11e:	50 e0       	ldi	r21, 0x00	; 0
 120:	60 e0       	ldi	r22, 0x00	; 0
 122:	7b e4       	ldi	r23, 0x4B	; 75
 124:	80 e0       	ldi	r24, 0x00	; 0
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	19 95       	eicall
 12a:	ff cf       	rjmp	.-2      	; 0x12a <main+0x16>

0000012c <initASYNC>:
#include <avr/interrupt.h>
#include <stdio.h>
#include <stdlib.h>
#include "UARTLib.h"

int initASYNC(int rate, int UARTReg, int UARTBaudRegList[6][4][2]){
 12c:	0f 93       	push	r16
 12e:	1f 93       	push	r17
 130:	cf 93       	push	r28
 132:	df 93       	push	r29
 134:	eb 01       	movw	r28, r22
 136:	8a 01       	movw	r16, r20
	UART.ubrr = F_CPU/(16*rate)-1;
 138:	82 95       	swap	r24
 13a:	92 95       	swap	r25
 13c:	90 7f       	andi	r25, 0xF0	; 240
 13e:	98 27       	eor	r25, r24
 140:	80 7f       	andi	r24, 0xF0	; 240
 142:	98 27       	eor	r25, r24
 144:	9c 01       	movw	r18, r24
 146:	99 0f       	add	r25, r25
 148:	44 0b       	sbc	r20, r20
 14a:	55 0b       	sbc	r21, r21
 14c:	60 e0       	ldi	r22, 0x00	; 0
 14e:	74 e2       	ldi	r23, 0x24	; 36
 150:	84 ef       	ldi	r24, 0xF4	; 244
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	2d d1       	rcall	.+602    	; 0x3b0 <__udivmodsi4>
 156:	21 50       	subi	r18, 0x01	; 1
 158:	31 09       	sbc	r19, r1
 15a:	a0 e0       	ldi	r26, 0x00	; 0
 15c:	b2 e0       	ldi	r27, 0x02	; 2
 15e:	11 96       	adiw	r26, 0x01	; 1
 160:	3c 93       	st	X, r19
 162:	2e 93       	st	-X, r18
	UARTBaudRegList[0][UARTReg][0] = (unsigned char)(UART.ubrr>>8); //List of registers, see init() for the list;
 164:	be 01       	movw	r22, r28
 166:	66 0f       	add	r22, r22
 168:	77 1f       	adc	r23, r23
 16a:	66 0f       	add	r22, r22
 16c:	77 1f       	adc	r23, r23
 16e:	f8 01       	movw	r30, r16
 170:	e6 0f       	add	r30, r22
 172:	f7 1f       	adc	r31, r23
 174:	30 83       	st	Z, r19
 176:	11 82       	std	Z+1, r1	; 0x01
	UARTBaudRegList[0][UARTReg][1] = (unsigned char)UART.ubrr;
 178:	8d 91       	ld	r24, X+
 17a:	9c 91       	ld	r25, X
 17c:	99 27       	eor	r25, r25
 17e:	93 83       	std	Z+3, r25	; 0x03
 180:	82 83       	std	Z+2, r24	; 0x02
	UARTBaudRegList[2][UARTReg][0] = (1<<UARTBaudRegList[4][UARTReg][0])|(1<<UARTBaudRegList[5][UARTReg][0]);
 182:	d8 01       	movw	r26, r16
 184:	a0 5c       	subi	r26, 0xC0	; 192
 186:	bf 4f       	sbci	r27, 0xFF	; 255
 188:	a6 0f       	add	r26, r22
 18a:	b7 1f       	adc	r27, r23
 18c:	81 e0       	ldi	r24, 0x01	; 1
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	9c 01       	movw	r18, r24
 192:	0c 90       	ld	r0, X
 194:	02 c0       	rjmp	.+4      	; 0x19a <initASYNC+0x6e>
 196:	22 0f       	add	r18, r18
 198:	33 1f       	adc	r19, r19
 19a:	0a 94       	dec	r0
 19c:	e2 f7       	brpl	.-8      	; 0x196 <initASYNC+0x6a>
 19e:	00 5b       	subi	r16, 0xB0	; 176
 1a0:	1f 4f       	sbci	r17, 0xFF	; 255
 1a2:	d8 01       	movw	r26, r16
 1a4:	a6 0f       	add	r26, r22
 1a6:	b7 1f       	adc	r27, r23
 1a8:	0c 90       	ld	r0, X
 1aa:	02 c0       	rjmp	.+4      	; 0x1b0 <initASYNC+0x84>
 1ac:	88 0f       	add	r24, r24
 1ae:	99 1f       	adc	r25, r25
 1b0:	0a 94       	dec	r0
 1b2:	e2 f7       	brpl	.-8      	; 0x1ac <initASYNC+0x80>
 1b4:	82 2b       	or	r24, r18
 1b6:	93 2b       	or	r25, r19
 1b8:	91 a3       	std	Z+33, r25	; 0x21
 1ba:	80 a3       	std	Z+32, r24	; 0x20
	return 1;
};
 1bc:	81 e0       	ldi	r24, 0x01	; 1
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	df 91       	pop	r29
 1c2:	cf 91       	pop	r28
 1c4:	1f 91       	pop	r17
 1c6:	0f 91       	pop	r16
 1c8:	08 95       	ret

000001ca <initASYNC2X>:

int initASYNC2X(int rate, int UARTReg, int UARTBaudRegList[6][4][2]){
	UART.ubrr = F_CPU/(8*rate)-1;
 1ca:	88 0f       	add	r24, r24
 1cc:	99 1f       	adc	r25, r25
 1ce:	88 0f       	add	r24, r24
 1d0:	99 1f       	adc	r25, r25
 1d2:	88 0f       	add	r24, r24
 1d4:	99 1f       	adc	r25, r25
 1d6:	9c 01       	movw	r18, r24
 1d8:	99 0f       	add	r25, r25
 1da:	44 0b       	sbc	r20, r20
 1dc:	55 0b       	sbc	r21, r21
 1de:	60 e0       	ldi	r22, 0x00	; 0
 1e0:	74 e2       	ldi	r23, 0x24	; 36
 1e2:	84 ef       	ldi	r24, 0xF4	; 244
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	e4 d0       	rcall	.+456    	; 0x3b0 <__udivmodsi4>
 1e8:	21 50       	subi	r18, 0x01	; 1
 1ea:	31 09       	sbc	r19, r1
 1ec:	30 93 01 02 	sts	0x0201, r19	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
 1f0:	20 93 00 02 	sts	0x0200, r18	; 0x800200 <__DATA_REGION_ORIGIN__>
	return 1;
};
 1f4:	81 e0       	ldi	r24, 0x01	; 1
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	08 95       	ret

000001fa <initMASTER>:

int initMASTER(int rate, int UARTReg, int UARTBaudRegList[6][4][2]){
	return 1;
};
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	08 95       	ret

00000200 <initSLAVE>:

int initSLAVE(int rate, int UARTReg, int UARTBaudRegList[6][4][2]){
	return 1;
};
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	08 95       	ret

00000206 <init>:

int init(int mode, int baudRate, int UARTId){
 206:	ef 92       	push	r14
 208:	ff 92       	push	r15
 20a:	0f 93       	push	r16
 20c:	1f 93       	push	r17
 20e:	cf 93       	push	r28
 210:	df 93       	push	r29
 212:	cd b7       	in	r28, 0x3d	; 61
 214:	de b7       	in	r29, 0x3e	; 62
 216:	c8 56       	subi	r28, 0x68	; 104
 218:	d1 09       	sbc	r29, r1
 21a:	0f b6       	in	r0, 0x3f	; 63
 21c:	f8 94       	cli
 21e:	de bf       	out	0x3e, r29	; 62
 220:	0f be       	out	0x3f, r0	; 63
 222:	cd bf       	out	0x3d, r28	; 61
	if(UARTId > 3){
 224:	44 30       	cpi	r20, 0x04	; 4
 226:	51 05       	cpc	r21, r1
 228:	0c f0       	brlt	.+2      	; 0x22c <init+0x26>
 22a:	b1 c0       	rjmp	.+354    	; 0x38e <init+0x188>
 22c:	8a 01       	movw	r16, r20
 22e:	7b 01       	movw	r14, r22
 230:	9c 01       	movw	r18, r24
		return 0;
	}
	int (*initFuncs[4])(int rate, int UARTReg, int UARTBaudRegList[6][4][2]) = {initASYNC, initASYNC2X, initMASTER, initSLAVE};
 232:	88 e0       	ldi	r24, 0x08	; 8
 234:	e6 e0       	ldi	r30, 0x06	; 6
 236:	f2 e0       	ldi	r31, 0x02	; 2
 238:	de 01       	movw	r26, r28
 23a:	11 96       	adiw	r26, 0x01	; 1
 23c:	01 90       	ld	r0, Z+
 23e:	0d 92       	st	X+, r0
 240:	8a 95       	dec	r24
 242:	e1 f7       	brne	.-8      	; 0x23c <init+0x36>
	int UARTBaudRateRegList[6][4][2] = {{{UBRR0L, UBRR0H},{UBRR1L, UBRR1H},{UBRR2L, UBRR2H},{UBRR3L, UBRR3H}}, 
 244:	ae 01       	movw	r20, r28
 246:	47 5f       	subi	r20, 0xF7	; 247
 248:	5f 4f       	sbci	r21, 0xFF	; 255
 24a:	80 e6       	ldi	r24, 0x60	; 96
 24c:	fa 01       	movw	r30, r20
 24e:	11 92       	st	Z+, r1
 250:	8a 95       	dec	r24
 252:	e9 f7       	brne	.-6      	; 0x24e <init+0x48>
 254:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	9a 87       	std	Y+10, r25	; 0x0a
 25c:	89 87       	std	Y+9, r24	; 0x09
 25e:	80 91 c5 00 	lds	r24, 0x00C5	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	9c 87       	std	Y+12, r25	; 0x0c
 266:	8b 87       	std	Y+11, r24	; 0x0b
 268:	80 91 cc 00 	lds	r24, 0x00CC	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7c00cc>
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	9e 87       	std	Y+14, r25	; 0x0e
 270:	8d 87       	std	Y+13, r24	; 0x0d
 272:	80 91 cd 00 	lds	r24, 0x00CD	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7c00cd>
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	98 8b       	std	Y+16, r25	; 0x10
 27a:	8f 87       	std	Y+15, r24	; 0x0f
 27c:	80 91 d4 00 	lds	r24, 0x00D4	; 0x8000d4 <__TEXT_REGION_LENGTH__+0x7c00d4>
 280:	90 e0       	ldi	r25, 0x00	; 0
 282:	9a 8b       	std	Y+18, r25	; 0x12
 284:	89 8b       	std	Y+17, r24	; 0x11
 286:	80 91 d5 00 	lds	r24, 0x00D5	; 0x8000d5 <__TEXT_REGION_LENGTH__+0x7c00d5>
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	9c 8b       	std	Y+20, r25	; 0x14
 28e:	8b 8b       	std	Y+19, r24	; 0x13
 290:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__TEXT_REGION_LENGTH__+0x7c0134>
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	9e 8b       	std	Y+22, r25	; 0x16
 298:	8d 8b       	std	Y+21, r24	; 0x15
 29a:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <__TEXT_REGION_LENGTH__+0x7c0135>
 29e:	90 e0       	ldi	r25, 0x00	; 0
 2a0:	98 8f       	std	Y+24, r25	; 0x18
 2a2:	8f 8b       	std	Y+23, r24	; 0x17
										{{UCSR0A}, {UCSR1A}, {UCSR2A}, {UCSR3A}}, 
 2a4:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
int init(int mode, int baudRate, int UARTId){
	if(UARTId > 3){
		return 0;
	}
	int (*initFuncs[4])(int rate, int UARTReg, int UARTBaudRegList[6][4][2]) = {initASYNC, initASYNC2X, initMASTER, initSLAVE};
	int UARTBaudRateRegList[6][4][2] = {{{UBRR0L, UBRR0H},{UBRR1L, UBRR1H},{UBRR2L, UBRR2H},{UBRR3L, UBRR3H}}, 
 2a8:	90 e0       	ldi	r25, 0x00	; 0
 2aa:	9a 8f       	std	Y+26, r25	; 0x1a
 2ac:	89 8f       	std	Y+25, r24	; 0x19
										{{UCSR0A}, {UCSR1A}, {UCSR2A}, {UCSR3A}}, 
 2ae:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7c00c8>
int init(int mode, int baudRate, int UARTId){
	if(UARTId > 3){
		return 0;
	}
	int (*initFuncs[4])(int rate, int UARTReg, int UARTBaudRegList[6][4][2]) = {initASYNC, initASYNC2X, initMASTER, initSLAVE};
	int UARTBaudRateRegList[6][4][2] = {{{UBRR0L, UBRR0H},{UBRR1L, UBRR1H},{UBRR2L, UBRR2H},{UBRR3L, UBRR3H}}, 
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	9e 8f       	std	Y+30, r25	; 0x1e
 2b6:	8d 8f       	std	Y+29, r24	; 0x1d
										{{UCSR0A}, {UCSR1A}, {UCSR2A}, {UCSR3A}}, 
 2b8:	80 91 d0 00 	lds	r24, 0x00D0	; 0x8000d0 <__TEXT_REGION_LENGTH__+0x7c00d0>
int init(int mode, int baudRate, int UARTId){
	if(UARTId > 3){
		return 0;
	}
	int (*initFuncs[4])(int rate, int UARTReg, int UARTBaudRegList[6][4][2]) = {initASYNC, initASYNC2X, initMASTER, initSLAVE};
	int UARTBaudRateRegList[6][4][2] = {{{UBRR0L, UBRR0H},{UBRR1L, UBRR1H},{UBRR2L, UBRR2H},{UBRR3L, UBRR3H}}, 
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	9a a3       	std	Y+34, r25	; 0x22
 2c0:	89 a3       	std	Y+33, r24	; 0x21
										{{UCSR0A}, {UCSR1A}, {UCSR2A}, {UCSR3A}}, 
 2c2:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <__TEXT_REGION_LENGTH__+0x7c0130>
int init(int mode, int baudRate, int UARTId){
	if(UARTId > 3){
		return 0;
	}
	int (*initFuncs[4])(int rate, int UARTReg, int UARTBaudRegList[6][4][2]) = {initASYNC, initASYNC2X, initMASTER, initSLAVE};
	int UARTBaudRateRegList[6][4][2] = {{{UBRR0L, UBRR0H},{UBRR1L, UBRR1H},{UBRR2L, UBRR2H},{UBRR3L, UBRR3H}}, 
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	9e a3       	std	Y+38, r25	; 0x26
 2ca:	8d a3       	std	Y+37, r24	; 0x25
										{{UCSR0A}, {UCSR1A}, {UCSR2A}, {UCSR3A}}, 
										{{UCSR0B}, {UCSR1B}, {UCSR2B}, {UCSR3B}}, 
 2cc:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7c00c1>
int init(int mode, int baudRate, int UARTId){
	if(UARTId > 3){
		return 0;
	}
	int (*initFuncs[4])(int rate, int UARTReg, int UARTBaudRegList[6][4][2]) = {initASYNC, initASYNC2X, initMASTER, initSLAVE};
	int UARTBaudRateRegList[6][4][2] = {{{UBRR0L, UBRR0H},{UBRR1L, UBRR1H},{UBRR2L, UBRR2H},{UBRR3L, UBRR3H}}, 
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	9a a7       	std	Y+42, r25	; 0x2a
 2d4:	89 a7       	std	Y+41, r24	; 0x29
										{{UCSR0A}, {UCSR1A}, {UCSR2A}, {UCSR3A}}, 
										{{UCSR0B}, {UCSR1B}, {UCSR2B}, {UCSR3B}}, 
 2d6:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7c00c9>
int init(int mode, int baudRate, int UARTId){
	if(UARTId > 3){
		return 0;
	}
	int (*initFuncs[4])(int rate, int UARTReg, int UARTBaudRegList[6][4][2]) = {initASYNC, initASYNC2X, initMASTER, initSLAVE};
	int UARTBaudRateRegList[6][4][2] = {{{UBRR0L, UBRR0H},{UBRR1L, UBRR1H},{UBRR2L, UBRR2H},{UBRR3L, UBRR3H}}, 
 2da:	90 e0       	ldi	r25, 0x00	; 0
 2dc:	9e a7       	std	Y+46, r25	; 0x2e
 2de:	8d a7       	std	Y+45, r24	; 0x2d
										{{UCSR0A}, {UCSR1A}, {UCSR2A}, {UCSR3A}}, 
										{{UCSR0B}, {UCSR1B}, {UCSR2B}, {UCSR3B}}, 
 2e0:	80 91 d1 00 	lds	r24, 0x00D1	; 0x8000d1 <__TEXT_REGION_LENGTH__+0x7c00d1>
int init(int mode, int baudRate, int UARTId){
	if(UARTId > 3){
		return 0;
	}
	int (*initFuncs[4])(int rate, int UARTReg, int UARTBaudRegList[6][4][2]) = {initASYNC, initASYNC2X, initMASTER, initSLAVE};
	int UARTBaudRateRegList[6][4][2] = {{{UBRR0L, UBRR0H},{UBRR1L, UBRR1H},{UBRR2L, UBRR2H},{UBRR3L, UBRR3H}}, 
 2e4:	90 e0       	ldi	r25, 0x00	; 0
 2e6:	9a ab       	std	Y+50, r25	; 0x32
 2e8:	89 ab       	std	Y+49, r24	; 0x31
										{{UCSR0A}, {UCSR1A}, {UCSR2A}, {UCSR3A}}, 
										{{UCSR0B}, {UCSR1B}, {UCSR2B}, {UCSR3B}}, 
 2ea:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <__TEXT_REGION_LENGTH__+0x7c0131>
int init(int mode, int baudRate, int UARTId){
	if(UARTId > 3){
		return 0;
	}
	int (*initFuncs[4])(int rate, int UARTReg, int UARTBaudRegList[6][4][2]) = {initASYNC, initASYNC2X, initMASTER, initSLAVE};
	int UARTBaudRateRegList[6][4][2] = {{{UBRR0L, UBRR0H},{UBRR1L, UBRR1H},{UBRR2L, UBRR2H},{UBRR3L, UBRR3H}}, 
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	9e ab       	std	Y+54, r25	; 0x36
 2f2:	8d ab       	std	Y+53, r24	; 0x35
										{{UCSR0A}, {UCSR1A}, {UCSR2A}, {UCSR3A}}, 
										{{UCSR0B}, {UCSR1B}, {UCSR2B}, {UCSR3B}}, 
											{{UCSR0C}, {UCSR1C}, {UCSR2C}, {UCSR3C}}, 
 2f4:	80 91 c2 00 	lds	r24, 0x00C2	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7c00c2>
int init(int mode, int baudRate, int UARTId){
	if(UARTId > 3){
		return 0;
	}
	int (*initFuncs[4])(int rate, int UARTReg, int UARTBaudRegList[6][4][2]) = {initASYNC, initASYNC2X, initMASTER, initSLAVE};
	int UARTBaudRateRegList[6][4][2] = {{{UBRR0L, UBRR0H},{UBRR1L, UBRR1H},{UBRR2L, UBRR2H},{UBRR3L, UBRR3H}}, 
 2f8:	90 e0       	ldi	r25, 0x00	; 0
 2fa:	9a af       	std	Y+58, r25	; 0x3a
 2fc:	89 af       	std	Y+57, r24	; 0x39
										{{UCSR0A}, {UCSR1A}, {UCSR2A}, {UCSR3A}}, 
										{{UCSR0B}, {UCSR1B}, {UCSR2B}, {UCSR3B}}, 
											{{UCSR0C}, {UCSR1C}, {UCSR2C}, {UCSR3C}}, 
 2fe:	80 91 ca 00 	lds	r24, 0x00CA	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7c00ca>
int init(int mode, int baudRate, int UARTId){
	if(UARTId > 3){
		return 0;
	}
	int (*initFuncs[4])(int rate, int UARTReg, int UARTBaudRegList[6][4][2]) = {initASYNC, initASYNC2X, initMASTER, initSLAVE};
	int UARTBaudRateRegList[6][4][2] = {{{UBRR0L, UBRR0H},{UBRR1L, UBRR1H},{UBRR2L, UBRR2H},{UBRR3L, UBRR3H}}, 
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	9e af       	std	Y+62, r25	; 0x3e
 306:	8d af       	std	Y+61, r24	; 0x3d
										{{UCSR0A}, {UCSR1A}, {UCSR2A}, {UCSR3A}}, 
										{{UCSR0B}, {UCSR1B}, {UCSR2B}, {UCSR3B}}, 
											{{UCSR0C}, {UCSR1C}, {UCSR2C}, {UCSR3C}}, 
 308:	80 91 d2 00 	lds	r24, 0x00D2	; 0x8000d2 <__TEXT_REGION_LENGTH__+0x7c00d2>
int init(int mode, int baudRate, int UARTId){
	if(UARTId > 3){
		return 0;
	}
	int (*initFuncs[4])(int rate, int UARTReg, int UARTBaudRegList[6][4][2]) = {initASYNC, initASYNC2X, initMASTER, initSLAVE};
	int UARTBaudRateRegList[6][4][2] = {{{UBRR0L, UBRR0H},{UBRR1L, UBRR1H},{UBRR2L, UBRR2H},{UBRR3L, UBRR3H}}, 
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	23 96       	adiw	r28, 0x03	; 3
 310:	9f af       	std	Y+63, r25	; 0x3f
 312:	8e af       	std	Y+62, r24	; 0x3e
 314:	23 97       	sbiw	r28, 0x03	; 3
										{{UCSR0A}, {UCSR1A}, {UCSR2A}, {UCSR3A}}, 
										{{UCSR0B}, {UCSR1B}, {UCSR2B}, {UCSR3B}}, 
											{{UCSR0C}, {UCSR1C}, {UCSR2C}, {UCSR3C}}, 
 316:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <__TEXT_REGION_LENGTH__+0x7c0132>
int init(int mode, int baudRate, int UARTId){
	if(UARTId > 3){
		return 0;
	}
	int (*initFuncs[4])(int rate, int UARTReg, int UARTBaudRegList[6][4][2]) = {initASYNC, initASYNC2X, initMASTER, initSLAVE};
	int UARTBaudRateRegList[6][4][2] = {{{UBRR0L, UBRR0H},{UBRR1L, UBRR1H},{UBRR2L, UBRR2H},{UBRR3L, UBRR3H}}, 
 31a:	90 e0       	ldi	r25, 0x00	; 0
 31c:	27 96       	adiw	r28, 0x07	; 7
 31e:	9f af       	std	Y+63, r25	; 0x3f
 320:	8e af       	std	Y+62, r24	; 0x3e
 322:	27 97       	sbiw	r28, 0x07	; 7
 324:	83 e0       	ldi	r24, 0x03	; 3
 326:	90 e0       	ldi	r25, 0x00	; 0
 328:	2b 96       	adiw	r28, 0x0b	; 11
 32a:	9f af       	std	Y+63, r25	; 0x3f
 32c:	8e af       	std	Y+62, r24	; 0x3e
 32e:	2b 97       	sbiw	r28, 0x0b	; 11
 330:	2f 96       	adiw	r28, 0x0f	; 15
 332:	9f af       	std	Y+63, r25	; 0x3f
 334:	8e af       	std	Y+62, r24	; 0x3e
 336:	2f 97       	sbiw	r28, 0x0f	; 15
 338:	63 96       	adiw	r28, 0x13	; 19
 33a:	9f af       	std	Y+63, r25	; 0x3f
 33c:	8e af       	std	Y+62, r24	; 0x3e
 33e:	63 97       	sbiw	r28, 0x13	; 19
 340:	67 96       	adiw	r28, 0x17	; 23
 342:	9f af       	std	Y+63, r25	; 0x3f
 344:	8e af       	std	Y+62, r24	; 0x3e
 346:	67 97       	sbiw	r28, 0x17	; 23
 348:	84 e0       	ldi	r24, 0x04	; 4
 34a:	90 e0       	ldi	r25, 0x00	; 0
 34c:	6b 96       	adiw	r28, 0x1b	; 27
 34e:	9f af       	std	Y+63, r25	; 0x3f
 350:	8e af       	std	Y+62, r24	; 0x3e
 352:	6b 97       	sbiw	r28, 0x1b	; 27
 354:	6f 96       	adiw	r28, 0x1f	; 31
 356:	9f af       	std	Y+63, r25	; 0x3f
 358:	8e af       	std	Y+62, r24	; 0x3e
 35a:	6f 97       	sbiw	r28, 0x1f	; 31
 35c:	a3 96       	adiw	r28, 0x23	; 35
 35e:	9f af       	std	Y+63, r25	; 0x3f
 360:	8e af       	std	Y+62, r24	; 0x3e
 362:	a3 97       	sbiw	r28, 0x23	; 35
 364:	a7 96       	adiw	r28, 0x27	; 39
 366:	9f af       	std	Y+63, r25	; 0x3f
 368:	8e af       	std	Y+62, r24	; 0x3e
 36a:	a7 97       	sbiw	r28, 0x27	; 39
										{{UCSR0A}, {UCSR1A}, {UCSR2A}, {UCSR3A}}, 
										{{UCSR0B}, {UCSR1B}, {UCSR2B}, {UCSR3B}}, 
											{{UCSR0C}, {UCSR1C}, {UCSR2C}, {UCSR3C}}, 
										{{TXEN0}, {TXEN1}, {TXEN2}, {TXEN3}}, 
										{{RXEN0}, {RXEN1}, {RXEN2}, {RXEN3}}};
	if((*initFuncs[mode])(baudRate, UARTId, UARTBaudRateRegList)){
 36c:	22 0f       	add	r18, r18
 36e:	33 1f       	adc	r19, r19
 370:	e1 e0       	ldi	r30, 0x01	; 1
 372:	f0 e0       	ldi	r31, 0x00	; 0
 374:	ec 0f       	add	r30, r28
 376:	fd 1f       	adc	r31, r29
 378:	e2 0f       	add	r30, r18
 37a:	f3 1f       	adc	r31, r19
 37c:	01 90       	ld	r0, Z+
 37e:	f0 81       	ld	r31, Z
 380:	e0 2d       	mov	r30, r0
 382:	b8 01       	movw	r22, r16
 384:	c7 01       	movw	r24, r14
 386:	19 95       	eicall
		
	}
	return 1;
 388:	81 e0       	ldi	r24, 0x01	; 1
 38a:	90 e0       	ldi	r25, 0x00	; 0
 38c:	02 c0       	rjmp	.+4      	; 0x392 <init+0x18c>
	return 1;
};

int init(int mode, int baudRate, int UARTId){
	if(UARTId > 3){
		return 0;
 38e:	80 e0       	ldi	r24, 0x00	; 0
 390:	90 e0       	ldi	r25, 0x00	; 0
										{{RXEN0}, {RXEN1}, {RXEN2}, {RXEN3}}};
	if((*initFuncs[mode])(baudRate, UARTId, UARTBaudRateRegList)){
		
	}
	return 1;
}
 392:	c8 59       	subi	r28, 0x98	; 152
 394:	df 4f       	sbci	r29, 0xFF	; 255
 396:	0f b6       	in	r0, 0x3f	; 63
 398:	f8 94       	cli
 39a:	de bf       	out	0x3e, r29	; 62
 39c:	0f be       	out	0x3f, r0	; 63
 39e:	cd bf       	out	0x3d, r28	; 61
 3a0:	df 91       	pop	r29
 3a2:	cf 91       	pop	r28
 3a4:	1f 91       	pop	r17
 3a6:	0f 91       	pop	r16
 3a8:	ff 90       	pop	r15
 3aa:	ef 90       	pop	r14
 3ac:	08 95       	ret

000003ae <transmit>:

void transmit(){
 3ae:	08 95       	ret

000003b0 <__udivmodsi4>:
 3b0:	a1 e2       	ldi	r26, 0x21	; 33
 3b2:	1a 2e       	mov	r1, r26
 3b4:	aa 1b       	sub	r26, r26
 3b6:	bb 1b       	sub	r27, r27
 3b8:	fd 01       	movw	r30, r26
 3ba:	0d c0       	rjmp	.+26     	; 0x3d6 <__udivmodsi4_ep>

000003bc <__udivmodsi4_loop>:
 3bc:	aa 1f       	adc	r26, r26
 3be:	bb 1f       	adc	r27, r27
 3c0:	ee 1f       	adc	r30, r30
 3c2:	ff 1f       	adc	r31, r31
 3c4:	a2 17       	cp	r26, r18
 3c6:	b3 07       	cpc	r27, r19
 3c8:	e4 07       	cpc	r30, r20
 3ca:	f5 07       	cpc	r31, r21
 3cc:	20 f0       	brcs	.+8      	; 0x3d6 <__udivmodsi4_ep>
 3ce:	a2 1b       	sub	r26, r18
 3d0:	b3 0b       	sbc	r27, r19
 3d2:	e4 0b       	sbc	r30, r20
 3d4:	f5 0b       	sbc	r31, r21

000003d6 <__udivmodsi4_ep>:
 3d6:	66 1f       	adc	r22, r22
 3d8:	77 1f       	adc	r23, r23
 3da:	88 1f       	adc	r24, r24
 3dc:	99 1f       	adc	r25, r25
 3de:	1a 94       	dec	r1
 3e0:	69 f7       	brne	.-38     	; 0x3bc <__udivmodsi4_loop>
 3e2:	60 95       	com	r22
 3e4:	70 95       	com	r23
 3e6:	80 95       	com	r24
 3e8:	90 95       	com	r25
 3ea:	9b 01       	movw	r18, r22
 3ec:	ac 01       	movw	r20, r24
 3ee:	bd 01       	movw	r22, r26
 3f0:	cf 01       	movw	r24, r30
 3f2:	08 95       	ret

000003f4 <_exit>:
 3f4:	f8 94       	cli

000003f6 <__stop_program>:
 3f6:	ff cf       	rjmp	.-2      	; 0x3f6 <__stop_program>
